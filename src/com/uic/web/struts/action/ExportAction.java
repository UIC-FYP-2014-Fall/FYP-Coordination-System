/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.uic.web.struts.action;

import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.uic.domain.PreTimetable;
import com.uic.domain.Student;
import com.uic.domain.Teacher;
import com.uic.domain.Time;
import com.uic.service.imp.StudentServiceImp;
import com.uic.service.inter.StudentServiceInter;
import com.uic.service.inter.TimeType;
import com.uic.util.TimeChecker;


/**
 * MyEclipse Struts Creation date: 10-29-2014
 * 
 * XDoclet definition:
 * 
 * @struts.action parameter="flag"
 */
public class ExportAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward goExportUi(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		if (request.getSession().getAttribute("role").equals("coordinator")) {
			
			//check time whether student has finished the presentation choose
			Time checker = TimeChecker.timeCheck();
			if(checker.getType().equals(TimeType.system_done)){
				//can export presentation timetable
				request.setAttribute("TimetableState", "true");
				//ready data for the view
				StudentServiceInter studentServiceInter = new StudentServiceImp();
				ArrayList<Student> stuAl = studentServiceInter.getAllStudent();
				ArrayList<PreTimetable> preList = new ArrayList<>();
				
				for(int i=0;i<stuAl.size();i++){
					PreTimetable tb = new PreTimetable();
					
					tb.setSid(stuAl.get(i).getSid());
					tb.setsName(stuAl.get(i).getName());
					
					String supervisors = "";										
					//tb.setExaminer(studentServiceInter.getExaminer(stuAl.get(i).getSid()).getName());
					String examiner = "";
					try {
						ArrayList<Teacher> al = studentServiceInter.getSupervisor(stuAl.get(i));
						
						if(al.size()>1){
							for(int j=0;j<al.size();j++){
								supervisors = al.get(j).getName()+", "+supervisors;
							}
						}else{
							supervisors = al.get(0).getName();
						}
						tb.setSupervisor(supervisors);
						tb.setObserver(studentServiceInter.getObserver(stuAl.get(i).getSid()).getName());
						tb.setDatetime(studentServiceInter.getPreTimeByStudentId(stuAl.get(i).getId().toString()));
						examiner = studentServiceInter.getExaminer(stuAl.get(i).getSid()).getName();
						tb.setExaminer(examiner);

					} catch (Exception e) {
						// TODO: handle exception
					}
					//System.out.println(examiner);
					//tb.setExaminer(studentServiceInter.getExaminer(stuAl.get(i).getSid()).getName());
					
					preList.add(tb);
					
				}
				request.setAttribute("PreTimeList", preList);
				
				
			}else{
				request.setAttribute("TimetableState", "false");
			}
			

			
			return mapping.findForward("goExportUi");
		} else {
			request.setAttribute("msg", "ERROR: Permission denied.");
			return mapping.findForward("goLogin");
		}
	}
}