/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.uic.web.struts.action;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.uic.domain.ObsTopic;
import com.uic.domain.Stuexaminer;
import com.uic.domain.Teacher;
import com.uic.service.imp.FYPServiceImp;
import com.uic.service.imp.StudentServiceImp;
import com.uic.util.BaseUtil;
import com.uic.util.PropertiesHelper;
/** 
 * MyEclipse Struts
 * Creation date: 10-26-2014
 * 
 * XDoclet definition:
 * @struts.action parameter="flag" validate="true"
 * @struts.action-forward name="chooseObserver" path="/WEB-INF/logined/Teacher/chooseObserver.jsp"
 * @struts.action-forward name="changePwd" path="/WEB-INF/logined/Teacher/changePwd.jsp"
 * @struts.action-forward name="topicList" path="/WEB-INF/logined/Teacher/topicList.jsp"
 * @struts.action-forward name="mainPage" path="/WEB-INF/logined/Teacher/teacherMain.jsp"
 * @struts.action-forward name="timetable" path="/WEB-INF/logined/Teacher/timetable.jsp"
 * @struts.action-forward name="uploadTopic" path="/WEB-INF/logined/Teacher/uploadTopic.jsp"
 */
public class TeacherPageControlAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward mainPage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		System.out.println("Using TeacherPageControlAction");
		if(request.getSession().getAttribute("role").equals("teacher")){
			PropertiesHelper ph = new PropertiesHelper("/WEB-INF/config/FYP-system.properties");
			FYPServiceImp fypService=new FYPServiceImp();
			StudentServiceImp studentService = new StudentServiceImp();
			Teacher teacher = (Teacher)request.getSession().getAttribute("teacherinfo");
			//upload topic time
			String uploadTopicStart = ph.getProperties("UploadTopicsStartDateTime");
			String uploadTopicEnd = ph.getProperties("UploadTopicsEndDateTime");
			if(uploadTopicStart!=null&&uploadTopicEnd!=null){
				if(BaseUtil.todayIsInPeriod(uploadTopicStart, uploadTopicEnd)){
					request.setAttribute("uploadTopicTime", "Now");
				}else{
					request.setAttribute("uploadTopicTime", uploadTopicStart+" to "+ uploadTopicEnd);
				}
			}else{
				request.setAttribute("uploadTopicTime", "To Be Determined.");
			}
			//choose topic time : View Student's choice & Choose Observer
			String chooseTopicStart = ph.getProperties("ChooseTopicStartDateTime");
			String chooseTopicEnd = ph.getProperties("ChooseTopicEndDateTime");
			if(chooseTopicStart!=null&&chooseTopicEnd!=null){
				if(BaseUtil.todayIsInPeriod(chooseTopicStart, chooseTopicEnd)){
					request.setAttribute("chooseTopicTime", "Now");
				}else{
					request.setAttribute("chooseTopicTime", chooseTopicStart+" to "+ chooseTopicStart);
				}
			}else{
				request.setAttribute("chooseTopicTime", "To Be Determined.");
			}
			
			//select available time
			String choosePreTimeStart = ph.getProperties("ChoosePresentationStartDateTime");
			String choosePreTimeEnd = ph.getProperties("ChoosePresentationEndDateTime");
			if(choosePreTimeStart!=null&&choosePreTimeEnd!=null){
				if(BaseUtil.todayIsInPeriod(choosePreTimeStart, choosePreTimeEnd)){
					request.setAttribute("choosePreTime", "Now");
				}else{
					request.setAttribute("choosePreTime", choosePreTimeStart+" to "+ choosePreTimeEnd);
				}
			}else{
				request.setAttribute("choosePreTime", "To Be Determined.");
			}
			
			
				String showObserver = ph.getProperties("ChooseExaminersStartDateTime");
				String showExaminer = ph.getProperties("ChooseExaminersEndDateTime");
			if(showObserver!=null&&showExaminer!=null){
				if(BaseUtil.todayIsAfter(showObserver)){
					request.setAttribute("showObserver", "true");
					List<ObsTopic> obsTopicList = fypService.getObsTopicByTeacherId(teacher.getId().toString());
					request.setAttribute("obsTopicList", obsTopicList);
				}
				if(BaseUtil.todayIsAfter(showExaminer)){
					request.setAttribute("showExaminer", "true");
					List<Stuexaminer> stuExaminerList=studentService.getExaminerByTeacherId(teacher.getId().toString());
					request.setAttribute("stuExaminerList", stuExaminerList);
				}
			}
			return mapping.findForward("mainPage");
		}else{
			request.setAttribute("msg", "ERROR: Permission denied.");
			return mapping.findForward("goLogin");
		}
	}
}