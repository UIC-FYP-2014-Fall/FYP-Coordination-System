/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.uic.web.struts.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.uic.service.imp.TeachersServiceImp;
import com.uic.service.inter.TeachersServiceInter;
import com.uic.util.BaseUtil;
import com.uic.util.PropertiesHelper;
import com.uic.web.struts.form.QuotaForm;

/**
 * MyEclipse Struts Creation date: 11-22-2014
 * 
 * XDoclet definition:
 * 
 * @struts.action parameter="flag"
 */
public class QuotaAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward goUi(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		if (request.getSession().getAttribute("role").equals("coordinator")) {
			PropertiesHelper ph = new PropertiesHelper("/WEB-INF/config/FYP-system.properties");
			
			String CTstartDateTime = ph.getProperties("ChooseTopicStartDateTime");
			if(CTstartDateTime!=null){
				java.util.Date StartTime = BaseUtil.StringConvertDate(CTstartDateTime);
				java.util.Date nowDate = new java.util.Date();
				System.out.println(nowDate);
				//lock quota change
				if(StartTime.before(nowDate)){
					request.setAttribute("lock", "true");
				}else{
					request.setAttribute("lock", "false");
				}
			}else{
				request.setAttribute("lock", "false");
			}
			
			//ready teacher info for quota.jsp
			TeachersServiceInter teachersServiceInter =  new TeachersServiceImp();
			request.setAttribute("teacherList", teachersServiceInter.getTeachers());
			
			
			
			return mapping.findForward("goUi");
		} else {
			request.setAttribute("msg", "ERROR: Permission denied.");
			return mapping.findForward("goLogin");
		}
	}
	
	public ActionForward saveQuota(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		if (request.getSession().getAttribute("role").equals("coordinator")) {
			QuotaForm quotaForm = (QuotaForm)form;
			String[] quota = quotaForm.getQuota();
			boolean flag = true;
			
			TeachersServiceInter teachersServiceInter = new TeachersServiceImp();
			
			for(int i=0;i<quota.length;i++){
				String[] temp = quota[i].split(",");
				try {
					teachersServiceInter.saveQuota(temp[0], temp[1]);
				} catch (Exception e) {
					// TODO: handle exception
					flag=false;
					break;
				}
			}
			
			if(flag){
				request.setAttribute("SaveQuotaOperation", "success");
			}else{
				request.setAttribute("SaveQuotaOperation", "error");
			}

			
			return new ActionForward("/quota.do?flag=goUi");
		} else {
			request.setAttribute("msg", "ERROR: Permission denied.");
			return mapping.findForward("goLogin");
		}
	}
}