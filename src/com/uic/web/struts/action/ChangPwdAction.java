/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.uic.web.struts.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.uic.domain.Coordinator;
import com.uic.domain.Student;
import com.uic.domain.Teacher;
import com.uic.service.imp.UsersServiceImp;
import com.uic.service.inter.UsersServiceInter;
import com.uic.web.struts.form.ChangePwdForm;

/**
 * MyEclipse Struts Creation date: 10-30-2014
 * 
 * XDoclet definition:
 * 
 * @struts.action parameter="flag"
 */
public class ChangPwdAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward teacherChangePwdUi(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		System.out.println("Using TeacherPageControlAction");
		if(request.getSession().getAttribute("role").equals("teacher")){
			return mapping.findForward("goTeacherPwdUi");
		}else{
			request.setAttribute("msg", "ERROR: Permission denied.");
			return mapping.findForward("goLogin");
		}
	}
	
	public ActionForward goPwdUi(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		if (request.getSession().getAttribute("role").equals("coordinator")) {
			return mapping.findForward("goPwdUi");
		}else if(request.getSession().getAttribute("role").equals("student")){
			return mapping.findForward("goStudentChangePwdUi");
		}else {
			request.setAttribute("msg", "ERROR: Permission denied.");
			return mapping.findForward("goLogin");
		}
	}

	public ActionForward changePwd(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		ChangePwdForm changePwdForm = (ChangePwdForm) form;
		String role = (String) request.getSession().getAttribute("role");

		String oldPwd = changePwdForm.getOldPwd();
		String newPwd = changePwdForm.getNewPwd();

		if (role.equals("coordinator")) {

			Coordinator coordinator = (Coordinator) request.getSession()
					.getAttribute("coordinatorinfo");
			if (oldPwd.equals(coordinator.getPassword())) {
				if (oldPwd.equals(newPwd)) {
					request.setAttribute(
							"PwdError",
							"Your new password can't be the same as the original password. Please try again!");
					return mapping.findForward("goPwdUi");
				} else {
					UsersServiceInter usersServiceInter = new UsersServiceImp();
					if (usersServiceInter.changePwd(role, newPwd,
							coordinator.getId() + "")) {
						request.setAttribute("msg", "Your password has changed. Please login again!");
						return mapping.findForward("goLogin");
					} else {
						request.setAttribute("PwdError",
								"Change password error!");
						return mapping.findForward("goPwdUi");
					}
				}
			} else {
				request.setAttribute("PwdError",
						"Your original password error!");
				return mapping.findForward("goPwdUi");
				
			}

		} 
		else if(role.equals("teacher")){
			Teacher teacher = (Teacher)request.getSession().getAttribute("teacherinfo");
			if (oldPwd.equals(teacher.getPassword())) {
				if (oldPwd.equals(newPwd)) {
					request.setAttribute(
							"PwdError",
							"Your new password can't be the same as the original password. Please try again!");
					return mapping.findForward("goTeacherPwdUi");
				} else {
					UsersServiceInter usersServiceInter = new UsersServiceImp();
					if (usersServiceInter.changePwd(role, newPwd,
							teacher.getId() + "")) {
						request.setAttribute("msg", "Your password has changed. Please login again!");
						return mapping.findForward("goLogin");
					} else {
						request.setAttribute("PwdError",
								"Change password error!");
						return mapping.findForward("goTeacherPwdUi");
					}
				}
			}else {
				request.setAttribute("PwdError",
						"Your original password error!");
				return mapping.findForward("goTeacherPwdUi");
				
			}
		}else if(role.equals("student")){
			Student student = (Student)request.getSession().getAttribute("studentinfo");
			if (oldPwd.equals(student.getPassword())) {
				if (oldPwd.equals(newPwd)) {
					request.setAttribute(
							"PwdError",
							"Your new password can't be the same as the original password. Please try again!");
					return mapping.findForward("goTeacherPwdUi");
				} else {
					UsersServiceInter usersServiceInter = new UsersServiceImp();
					if (usersServiceInter.changePwd(role, newPwd,
							student.getId() + "")) {
						request.setAttribute("msg", "Your password has changed. Please login again!");
						return mapping.findForward("goLogin");
					} else {
						request.setAttribute("PwdError",
								"Change password error!");
						return mapping.findForward("goStudentChangePwdUi");
					}
				}
			}else {
				request.setAttribute("PwdError",
						"Your original password error!");
				return mapping.findForward("goStudentChangePwdUi");
				
			}
		}
		
		else {
			request.setAttribute("msg", "ERROR: Permission denied.");
			return mapping.findForward("goLogin");
		}
	}
}
