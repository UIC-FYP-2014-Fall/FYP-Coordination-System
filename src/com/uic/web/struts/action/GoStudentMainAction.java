/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.uic.web.struts.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.uic.domain.Student;
import com.uic.domain.Teacher;
import com.uic.domain.Time;
import com.uic.domain.Topic;
import com.uic.service.imp.StudentServiceImp;
import com.uic.service.inter.StudentServiceInter;
import com.uic.util.TimeChecker;


/** 
 * MyEclipse Struts
 * Creation date: 12-01-2014
 * 
 * XDoclet definition:
 * @struts.action parameter="flag"
 */
public class GoStudentMainAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		if (request.getSession().getAttribute("role").equals("student")) {
			
			Student stu = (Student)request.getSession().getAttribute("studentinfo");
			Time time = new Time();
			//check now time located situation
			time = TimeChecker.timeCheck();
			//check whether student has chosen topic
			StudentServiceInter studentSericeInter = new StudentServiceImp();
			
			
			if(studentSericeInter.checkTopicState(stu.getSid())){
				request.setAttribute("chooseTopic", "true");
				//get student topic info
				Topic topic = studentSericeInter.getStudentTopic(stu.getSid());
				
				request.setAttribute("stuTopic", topic.getTitle());
				
				List<Teacher> supervisor = studentSericeInter.getSupervisor(stu.getSid());
				String supervisorString = "";
				if(supervisor!=null){
					supervisorString = supervisor.get(0).getName();
					if(supervisor.size()>1){
						for(int i=1;i<supervisor.size();i++){
							supervisorString=supervisor.get(i).getName()+", "+supervisorString;
						}
					}
				}
				request.setAttribute("stuSupervisor", supervisorString);
				
			}else{
				request.setAttribute("chooseTopic", "false");
			}
			//check whether student choose examiner
			if(studentSericeInter.checkExaminerState(stu.getSid())){
				
				request.setAttribute("chooseExaminer", "true");
				//get student examiner info
				Teacher examiner = studentSericeInter.getExaminer(stu.getSid());
				
				request.setAttribute("Examiner", examiner.getName());
				
			}else{
				request.setAttribute("chooseExaminer", "false");
			}
			//check whether student choose presentation time
			if(studentSericeInter.checkPretimeState(stu.getSid())){
				request.setAttribute("choosePretime", "true");
				//get student examiner info
				request.setAttribute("Pretime", "2014-12-29 09:00:00-09:30:00");
			}else{
				request.setAttribute("choosePretime", "false");
			}
			
			//System.out.println("TimeType: "+time.getType());
			
			request.setAttribute("timeType", time.getType());
			request.setAttribute("start", time.getStartTime());
			request.setAttribute("end", time.getEndTime());
			
			
			
			return mapping.findForward("goMainUi");
		}else{
			request.setAttribute("msg", "ERROR: Permission denied.");
			return mapping.findForward("goLogin");
		}
	}
}