/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.uic.web.struts.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.uic.util.PropertiesHelper;

/** 
 * MyEclipse Struts
 * Creation date: 03-11-2015
 * 
 * XDoclet definition:
 * @struts.action parameter="flag" validate="true"
 * @struts.action-forward name="tempSetOpenTime" path="/WEB-INF/logined/Coordinator/tempSetOpenTime.jsp"
 */
public class TempSetOpenTimeAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward goToSettingUi(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		//prepare data for the jsp page
		PropertiesHelper ph = new PropertiesHelper("/WEB-INF/config/FYP-system.properties");
		//upload topics for teachers time
		String UTstartDateTime = ph.getProperties("UploadTopicsStartDateTime");
		String UTendDateTime = ph.getProperties("UploadTopicsEndDateTime");
		//choose topic for students time
		String CTstartDateTime = ph.getProperties("ChooseTopicStartDateTime");
		String CTendDateTime = ph.getProperties("ChooseTopicEndDateTime");
		//choose examiners for students time
		String CEstartDateTime = ph.getProperties("ChooseExaminersStartDateTime");
		String CEendDateTime = ph.getProperties("ChooseExaminersEndDateTime");
		//choose presentation for student time
		String CPstartDateTime = ph.getProperties("ChoosePresentationStartDateTime");
		String CPendDateTime = ph.getProperties("ChoosePresentationEndDateTime");
		//presentation time period
		String PreStartDateTime = ph.getProperties("PreStartDateTime");
		String PreEndDateTime = ph.getProperties("PreEndDateTime");
		
		request.setAttribute("UTstartDateTime", UTstartDateTime);
		request.setAttribute("UTendDateTime", UTendDateTime);
		
		request.setAttribute("CTstartDateTime", CTstartDateTime);
		request.setAttribute("CTendDateTime", CTendDateTime);
		
		request.setAttribute("CEstartDateTime", CEstartDateTime);
		request.setAttribute("CEendDateTime", CEendDateTime);
		
		request.setAttribute("CPstartDateTime", CPstartDateTime);
		request.setAttribute("CPendDateTime", CPendDateTime);
		
		request.setAttribute("PreStartDateTime", PreStartDateTime);
		request.setAttribute("PreEndDateTime", PreEndDateTime);
		
		
		return mapping.findForward("tempSetOpenTime");
	}
	public ActionForward setUploadTopicTime(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		String startTime = request.getParameter("start");
		String endTime = request.getParameter("end");
		System.out.println(startTime+" "+endTime);
		
		PropertiesHelper ph = new PropertiesHelper("/WEB-INF/config/FYP-system.properties");
		
		try {
			if(ph.getProperties("UploadTopicsStartDateTime").equals("")){
				request.setAttribute("tempMsg","Coordinator Does Not Set UploadTopicsDateTime.");
			}else{
				ph.setProperties("UploadTopicsStartDateTime", startTime);
				ph.setProperties("UploadTopicsEndDateTime", endTime);
				ph.setProperties("UploadTopicsDateTimeState", "true");
			}
			
		} catch (Exception e) {
			// TODO: handle exception
			request.setAttribute("tempMsg","Coordinator Does Not Set UploadTopicsDateTime.");
			e.printStackTrace();
		}
		return mapping.findForward("gotempSetOpenTimeUi");
	}
	public ActionForward setChooseTopicTime(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		String startTime = request.getParameter("start");
		String endTime = request.getParameter("end");
		System.out.println(startTime+" "+endTime);
		
		PropertiesHelper ph = new PropertiesHelper("/WEB-INF/config/FYP-system.properties");
		
		try {
			if(ph.getProperties("ChooseTopicStartDateTime").equals("")){
				request.setAttribute("tempMsg","Coordinator Does Not Set ChooseTopicDateTime.");
			}else{
				ph.setProperties("ChooseTopicStartDateTime", startTime);
				ph.setProperties("ChooseTopicEndDateTime", endTime);
				ph.setProperties("ChooseTopicDateTimeState", "true");
			}
		} catch (Exception e) {
			// TODO: handle exception
			request.setAttribute("tempMsg","Coordinator Does Not Set ChooseTopicDateTime.");
			e.printStackTrace();
		}
		return mapping.findForward("gotempSetOpenTimeUi");
	}
	public ActionForward setChooseExaminerTime(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		String startTime = request.getParameter("start");
		String endTime = request.getParameter("end");
		System.out.println(startTime+" "+endTime);
		
		PropertiesHelper ph = new PropertiesHelper("/WEB-INF/config/FYP-system.properties");
		
		try {
			if(ph.getProperties("ChooseExaminersStartDateTime").equals("")){
				request.setAttribute("tempMsg","Coordinator Does Not Set ChooseExaminersDateTime.");
			}else{
				ph.setProperties("ChooseExaminersStartDateTime", startTime);
				ph.setProperties("ChooseExaminersEndDateTime", endTime);
				ph.setProperties("ChooseExaminersDateTimeState", "true");
			}
		} catch (Exception e) {
			request.setAttribute("tempMsg","Coordinator Does Not Set ChooseExaminersDateTime.");
			// TODO: handle exception
			e.printStackTrace();
		}
		return mapping.findForward("gotempSetOpenTimeUi");
	}
	public ActionForward setChoosePresentationTime(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		String startTime = request.getParameter("start");
		String endTime = request.getParameter("end");
		System.out.println(startTime+" "+endTime);
		
		PropertiesHelper ph = new PropertiesHelper("/WEB-INF/config/FYP-system.properties");
		
		try {
			if(ph.getProperties("ChoosePresentationStartDateTime").equals("")){
				request.setAttribute("tempMsg","Coordinator Does Not Set ChoosePresentationDateTime.");
			}else{
				ph.setProperties("ChoosePresentationStartDateTime", startTime);
				ph.setProperties("ChoosePresentationEndDateTime", endTime);
				ph.setProperties("ChoosePresentationDateTimeState", "true");
			}
		} catch (Exception e) {
			// TODO: handle exception
			request.setAttribute("tempMsg","Coordinator Does Not Set ChoosePresentationDateTime.");
			e.printStackTrace();
		}
		return mapping.findForward("gotempSetOpenTimeUi");
	}
	public ActionForward setPresentationTime(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		String startTime = request.getParameter("start");
		String endTime = request.getParameter("end");
		System.out.println(startTime+" "+endTime);
		
		PropertiesHelper ph = new PropertiesHelper("/WEB-INF/config/FYP-system.properties");
		
		try {
			if(ph.getProperties("PreStartDateTime").equals("")){
				request.setAttribute("tempMsg","Coordinator Does Not Set PreDateTime.");
			}else{
				ph.setProperties("PreStartDateTime", startTime);
				ph.setProperties("PreEndDateTime", endTime);
				ph.setProperties("PreDateTimeState", "true");
			}
		} catch (Exception e) {
			// TODO: handle exception
			request.setAttribute("tempMsg","Coordinator Does Not Set PreDateTime.");
			e.printStackTrace();
		}
		return mapping.findForward("gotempSetOpenTimeUi");
	}
}